services:
  db:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 3s
      timeout: 30s
      retries: 10

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: redis-cli ping
      interval: 3s
      timeout: 30s
      retries: 10
    volumes:
      - redis_data:/data
    env_file:
      - .env

  celery:
    build: .
    command: celery -A config worker -l info -P eventlet
    volumes:
      - .:/app
      - celery_data:/data
    env_file:
      - .env
    depends_on:
      - redis

  web:
    build: .
    command: sh -c "python manage.py migrate --no-input && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8000"

volumes:
  postgres_data:
  static_volume:
  redis_data:
  celery_data:
